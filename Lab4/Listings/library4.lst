


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             LIBRARY, CODE, READWRITE
    2 00000000                 EXTERN           lab4
    3 00000000                 EXPORT           pin_connect_block_setup_for_uar
t0
    4 00000000                 EXPORT           uart_init
    5 00000000                 EXPORT           read_character
    6 00000000                 EXPORT           output_character
    7 00000000                 EXPORT           read_string
    8 00000000                 EXPORT           output_string
    9 00000000                 EXPORT           string_to_int
   10 00000000                 EXPORT           illuminate_RGB_LED
   11 00000000                 EXPORT           seven_segment
   12 00000000                 EXPORT           reverse_bits
   13 00000000 00000014 
                       U0LSR   EQU              0x14        ; UART0 Line Status
                                                             Register
   14 00000000         
   15 00000000 E000C000 
                       U0THR   EQU              0xE000C000
   16 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
   17 00000000 00000000 
                       stringaddress
                               DCD              0x00000000
   18 00000004         digits_SET
   19 00000004 00003780        DCD              0x00003780  ; 0
   20 00000008 00003000        DCD              0x00003000  ; 1 
   21 0000000C 00009580        DCD              0x00009580  ; 2
   22 00000010 00008780        DCD              0x00008780  ; 3
   23 00000014 0000A300        DCD              0x0000A300  ;   4
   24 00000018 0000A680        DCD              0x0000A680  ; 5
   25 0000001C 0000B680        DCD              0x0000B680  ; 6
   26 00000020 00000380        DCD              0x00000380  ; 7
   27 00000024 0000B780        DCD              0x0000B780  ; 8
   28 00000028 0000A780        DCD              0x0000A780  ; 9
   29 0000002C 0000B380        DCD              0x0000B380  ; A
   30 00000030 0000B600        DCD              0x0000B600  ; b
   31 00000034 00003480        DCD              0x00003480  ; C
   32 00000038 00009700        DCD              0x00009700  ; d
   33 0000003C 0000B480        DCD              0x0000B480  ; E
   34 00000040 0000B080        DCD              0x0000B080  ; F   
   35 00000044         
   36 00000044                 ALIGN
   37 00000044         
   38 00000044         
   39 00000044         
   40 00000044         read_string
   41 00000044 E92D4011        STMFD            sp!,{r0,r4, lr}
   42 00000048 EBFFFFFE 
                       LOOP1   BL               read_character
   43 0000004C EBFFFFFE        BL               output_character
   44 00000050 E350000D        CMP              r0, #0x0D
   45 00000054 0A000002        BEQ              END
   46 00000058 E5C40000        STRB             r0, [r4]
   47 0000005C E2844001        ADD              r4,r4,#1
   48 00000060 EAFFFFF8        B                LOOP1
   49 00000064 E3A00000 
                       END     MOV              r0, #0x00
   50 00000068 E5C40000        STRB             r0, [r4]



ARM Macro Assembler    Page 2 


   51 0000006C E3A0000A        MOV              r0, #0x0A
   52 00000070 EBFFFFFE        BL               output_character
   53 00000074         
   54 00000074 E8BD4011        LDMFD            sp!,{r0,r4,lr}
   55 00000078 E12FFF1E        BX               lr
   56 0000007C         
   57 0000007C         output_string
   58 0000007C         
   59 0000007C E92D4001        STMFD            sp!,{r0, lr}
   60 00000080 E5D40000 
                       output_loop
                               LDRB             r0,[r4]
   61 00000084 E2844001        ADD              r4,r4,#1
   62 00000088 E3500000        CMP              r0, #0x00
   63 0000008C 0A000001        BEQ              STOP
   64 00000090 EBFFFFFE        BL               output_character
   65 00000094 EAFFFFF9        B                output_loop
   66 00000098 E8BD4001 
                       STOP    LDMFD            sp!, {r0, lr}
   67 0000009C E12FFF1E        BX               lr
   68 000000A0         
   69 000000A0         
   70 000000A0         read_character
   71 000000A0         
   72 000000A0 E92D40C0        STMFD            sp!,{r6-r7,lr}
   73 000000A4 E59F61C8        LDR              r6, =U0THR
   74 000000A8 E3A09014        LDR              r9,=U0LSR
   75 000000AC E7D67009 
                       read_loop
                               LDRB             r7, [r6, r9]
   76 000000B0 E2077001        AND              r7, r7, #0x1
   77 000000B4 E3570000        CMP              r7, #0
   78 000000B8 0AFFFFFB        BEQ              read_loop
   79 000000BC E5D60000        LDRB             r0, [r6]
   80 000000C0 E8BD40C0        LDMFD            sp!,{r6-r7,lr}
   81 000000C4 E12FFF1E        BX               lr
   82 000000C8         
   83 000000C8         
   84 000000C8         output_character
   85 000000C8         
   86 000000C8 E92D4180        STMFD            sp!,{r7-r8,lr}
   87 000000CC E59F81A0        LDR              r8, =U0THR
   88 000000D0 E3A09014        LDR              r9,=U0LSR
   89 000000D4 E7D87009 
                       LOOP2   LDRB             r7, [r8, r9]
   90 000000D8 E2077020        AND              r7, r7, #0x20
   91 000000DC E3570000        CMP              r7, #0
   92 000000E0 0AFFFFFB        BEQ              LOOP2
   93 000000E4 E5C80000        STRB             r0, [r8]
   94 000000E8 E8BD4180        LDMFD            sp!, {r7-r8,lr}
   95 000000EC E12FFF1E        BX               lr
   96 000000F0         
   97 000000F0         
   98 000000F0         
   99 000000F0         string_to_int
  100 000000F0 E92D4000        STMFD            sp!, { lr}
  101 000000F4 E3A03000        MOV              r3, #0      ; intiialize r3 to 
                                                            0   
  102 000000F8 E3A0500A        MOV              r5, #10     ; intialize r5 to m



ARM Macro Assembler    Page 3 


                                                            ultiply later
  103 000000FC E3A01000        MOV              r1, #0      ; intialize r1 to 0
                                                            
  104 00000100         
  105 00000100         stoi
  106 00000100 E7D42003        LDRB             r2, [r4, r3] ; load the string 
                                                            of r4 to r2 with 0 
                                                            offset at first
  107 00000104 E352002D        CMP              r2, #45
  108 00000108 0A000004        BEQ              load_next
  109 0000010C E3520000        CMP              r2, #0      ; if its 0 then wer
                                                            e done 
  110 00000110 0A000004        BEQ              done_changing
  111 00000114 E2422030        SUB              r2, r2, #48 ; otherwsise subtra
                                                            ct from 48 to get t
                                                            he value
  112 00000118 E0010195        MUL              r1, r5, r1  ; multiplt r1 by 10
                                                             to add it later
  113 0000011C E0811002        ADD              r1, r1, r2  ; add the multiplie
                                                            d value with the r2
                                                             value after subtra
                                                            cting
  114 00000120         load_next
  115 00000120 E2833001        ADD              r3, r3, #1  ; increment the cou
                                                            nter
  116 00000124 EAFFFFF5        B                stoi        ; branch back
  117 00000128         
  118 00000128         done_changing
  119 00000128 E8BD4000        LDMFD            sp!, { lr}
  120 0000012C E12FFF1E        BX               lr
  121 00000130         
  122 00000130         
  123 00000130         
  124 00000130         
  125 00000130         
  126 00000130         
  127 00000130         uart_init
  128 00000130 E92D40FF        STMFD            sp!, {lr,r0-r7}
  129 00000134 E59F013C        LDR              r0, =0xE000C00C ;Load the addre
                                                            ss to r0
  130 00000138 E3A01083        MOV              r1, #131    ; initialize r1 to 
                                                            131    
  131 0000013C E5C01000        STRB             r1, [r0]    ; store 131 from r1
                                                             to memory address 
                                                            of r2    
  132 00000140 E59F212C        LDR              r2, =0xE000C000 ;load the addre
                                                            ss to r2
  133 00000144 E3A03078        MOV              r3, #120    ; initialze r2 to 1
                                                            20
  134 00000148 E5C23000        STRB             r3, [r2]    ;store 120 from r3 
                                                            to memory address o
                                                            f r3    
  135 0000014C E59F4128        LDR              r4, =0xE000C004 ; load the addr
                                                            ess to r4
  136 00000150 E3A05000        MOV              r5, #0x00   ; intiialize 0 to r
                                                            5
  137 00000154 E5C45000        STRB             r5, [r4]    ; store 0 from r5 t
                                                            o memory address of
                                                             r4    



ARM Macro Assembler    Page 4 


  138 00000158 E59F6118        LDR              r6, =0xE000C00C ;load the addre
                                                            ss to r6
  139 0000015C E3A07003        MOV              r7, #0x03   ; initialze r7 to 3
                                                            
  140 00000160 E5C67000        STRB             r7, [r6]    ;store the value of
                                                             r7 to memory addre
                                                            ss of r6     
  141 00000164         
  142 00000164 E8BD40FF        LDMFD            sp!, {lr,r0-r7}
  143 00000168 E12FFF1E        BX               lr
  144 0000016C         
  145 0000016C         illuminate_RGB_LED
  146 0000016C E92D401F        STMFD            SP!, {lr, r0-r4}
  147 00000170 E3500072        CMP              r0,#0x72    ; pressed 'r' for r
                                                            ed?
  148 00000174 1A000001        BNE              green_on    ; if not branch tp 
                                                            green
  149 00000178 E3A00802        MOV              r0,#0x20000 ;1 on pin 17
  150 0000017C EA000013        B                turn_rgb
  151 00000180         green_on
  152 00000180 E3500067        CMP              r0,#0x67    ; pressed 'g' for b
                                                            lue?
  153 00000184 1A000001        BNE              blue_on
  154 00000188 E3A00602        MOV              r0,#0x200000 ; 1 0n pin 21
  155 0000018C EA00000F        B                turn_rgb    ; turn on the color
                                                            
  156 00000190         
  157 00000190         blue_on
  158 00000190 E3500062        CMP              r0,#0x62    ; pressed 'b' for b
                                                            lue?
  159 00000194 1A000001        BNE              purple_on
  160 00000198 E3A00701        MOV              r0,#0x40000 ;;  1 on pin 18
  161 0000019C EA00000B        B                turn_rgb
  162 000001A0         
  163 000001A0         purple_on
  164 000001A0 E3500070        CMP              r0,#0x70    ;; pressed 'p' for 
                                                            purple?
  165 000001A4 1A000001        BNE              yellow_on
  166 000001A8 E3A00806        MOV              r0,#0x60000 ;pin 17 and 18 =1 p
                                                            urple
  167 000001AC EA000007        B                turn_rgb
  168 000001B0         
  169 000001B0         yellow_on
  170 000001B0 E3500079        CMP              r0,#0x79    ;; pressed 'y' for 
                                                            yellow?
  171 000001B4 1A000001        BNE              white_on
  172 000001B8 E3A00822        MOV              r0,#0x220000
  173 000001BC EA000003        B                turn_rgb
  174 000001C0         
  175 000001C0         white_on
  176 000001C0 E3500077        CMP              r0,#0x77    ;; pressed 'w' for 
                                                            white?
  177 000001C4 1AFFFFFE        BNE              lab4        ; go back to lab4
  178 000001C8 E3A00826        MOV              r0,#0x260000 ;pin 17 , 18 ,21 =
                                                            1== white
  179 000001CC EAFFFFFF        B                turn_rgb    ; turn on the color
                                                            
  180 000001D0         
  181 000001D0         turn_rgb                             ;clearing port to t



ARM Macro Assembler    Page 5 


                                                            urn on 
  182 000001D0         
  183 000001D0 E59F20A8        LDR              r2,=IO0CLR  ;load the base adre
                                                            ss
  184 000001D4 E5921000        LDR              r1,[r2]
  185 000001D8 E1811000        ORR              r1,r1,r0    ; 1 to turn on 
  186 000001DC E5821000        STR              r1,[r2]
  187 000001E0 EAFFFFFE        B                lab4
  188 000001E4 E8BD401F        LDMFD            SP!, {lr, r0-r4}
  189 000001E8 E12FFF1E        BX               lr
  190 000001EC         
  191 000001EC         reverse_bits
  192 000001EC         
  193 000001EC         
  194 000001EC         ; moving 0th bit to third and third to 0 and 1 to 2 ,2 t
                       o 1 and so on
  195 000001EC E92D400F        STMFD            SP!, {r0-r3,lr}
  196 000001F0 E3A01000        MOV              r1,#0
  197 000001F4 E3A02000        MOV              r2,#0
  198 000001F8 E3A03000        MOV              r3,#0
  199 000001FC E2001008        AND              r1,r0,#0x8  ;  
  200 00000200 E1A011A1        LSR              r1,r1,#3    ; Move it to 0th pl
                                                            ace
  201 00000204 E2022004        AND              r2,r2,#0x4  ; 2nd bit
  202 00000208 E1A020A2        LSR              r2,r2,#1    ; 2nd bit to 1st pl
                                                            ace
  203 0000020C E2003002        AND              r3,r0,#0x2  ; 1st bit
  204 00000210 E1A03083        LSL              r3,r3,#1    ; 1st to 2nd
  205 00000214 E2000001        AND              r0,r0,#1    ; 0th bit
  206 00000218 E1A00180        LSL              r0,r0,#3    ; 0th to 3rd
  207 0000021C E0800001        ADD              r0,r0,r1
  208 00000220 E0800002        ADD              r0,r0,r2
  209 00000224 E0800003        ADD              r0,r0,r3    ; add everything up
                                                             to get the reverse
                                                            d value
  210 00000228 E89D400F        LDMFD            SP, {r0-r3,lr}
  211 0000022C E12FFF1E        BX               LR
  212 00000230         
  213 00000230         
  214 00000230         
  215 00000230         
  216 00000230         
  217 00000230         seven_segment
  218 00000230 E92D400E        STMFD            SP!,{lr,r1,r2,r3}
  219 00000234 E59F1048        LDR              r1,=0xE0028000 ; base adress
  220 00000238 E59F3048        LDR              r3,=digits_SET 
                                                            ; load the digits 
  221 0000023C E1A00100        MOV              r0,r0,LSL#2
  222 00000240 E7932000        LDR              r2,[r3,r0]
  223 00000244 E5812004        STR              r2,[r1,#4]
  224 00000248 EAFFFFFE        B                lab4
  225 0000024C E8BD400E        LDMFD            SP!, {lr,r1,r2,r3}
  226 00000250 E12FFF1E        BX               lr
  227 00000254         
  228 00000254         
  229 00000254         pin_connect_block_setup_for_uart0
  230 00000254 E92D4003        STMFD            sp!, {r0, r1, lr}
  231 00000258 E59F002C        LDR              r0, =0xE002C000 ; PINSEL0
  232 0000025C E5901000        LDR              r1, [r0]



ARM Macro Assembler    Page 6 


  233 00000260 E3811005        ORR              r1, r1, #5
  234 00000264 E3C1100A        BIC              r1, r1, #0xA
  235 00000268 E5801000        STR              r1, [r0]
  236 0000026C E8BD4003        LDMFD            sp!, {r0, r1, lr}
  237 00000270 E12FFF1E        BX               lr
  238 00000274         
  239 00000274         
  240 00000274         
  241 00000274                 END
              E000C000 
              E000C00C 
              E000C004 
              E002800C 
              E0028000 
              00000000 
              E002C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\library4.d -o.\objects\library4.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5
\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --p
redefine="__UVISION_VERSION SETA 524" --list=.\listings\library4.lst library4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

END 00000064

Symbol: END
   Definitions
      At line 49 in file library4.s
   Uses
      At line 45 in file library4.s
Comment: END used once
LIBRARY 00000000

Symbol: LIBRARY
   Definitions
      At line 1 in file library4.s
   Uses
      None
Comment: LIBRARY unused
LOOP1 00000048

Symbol: LOOP1
   Definitions
      At line 42 in file library4.s
   Uses
      At line 48 in file library4.s
Comment: LOOP1 used once
LOOP2 000000D4

Symbol: LOOP2
   Definitions
      At line 89 in file library4.s
   Uses
      At line 92 in file library4.s
Comment: LOOP2 used once
STOP 00000098

Symbol: STOP
   Definitions
      At line 66 in file library4.s
   Uses
      At line 63 in file library4.s
Comment: STOP used once
blue_on 00000190

Symbol: blue_on
   Definitions
      At line 157 in file library4.s
   Uses
      At line 153 in file library4.s
Comment: blue_on used once
digits_SET 00000004

Symbol: digits_SET
   Definitions
      At line 18 in file library4.s
   Uses
      At line 220 in file library4.s
Comment: digits_SET used once
done_changing 00000128

Symbol: done_changing



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 118 in file library4.s
   Uses
      At line 110 in file library4.s
Comment: done_changing used once
green_on 00000180

Symbol: green_on
   Definitions
      At line 151 in file library4.s
   Uses
      At line 148 in file library4.s
Comment: green_on used once
illuminate_RGB_LED 0000016C

Symbol: illuminate_RGB_LED
   Definitions
      At line 145 in file library4.s
   Uses
      At line 10 in file library4.s
Comment: illuminate_RGB_LED used once
load_next 00000120

Symbol: load_next
   Definitions
      At line 114 in file library4.s
   Uses
      At line 108 in file library4.s
Comment: load_next used once
output_character 000000C8

Symbol: output_character
   Definitions
      At line 84 in file library4.s
   Uses
      At line 6 in file library4.s
      At line 43 in file library4.s
      At line 52 in file library4.s
      At line 64 in file library4.s

output_loop 00000080

Symbol: output_loop
   Definitions
      At line 60 in file library4.s
   Uses
      At line 65 in file library4.s
Comment: output_loop used once
output_string 0000007C

Symbol: output_string
   Definitions
      At line 57 in file library4.s
   Uses
      At line 8 in file library4.s
Comment: output_string used once
pin_connect_block_setup_for_uart0 00000254

Symbol: pin_connect_block_setup_for_uart0



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 229 in file library4.s
   Uses
      At line 3 in file library4.s
Comment: pin_connect_block_setup_for_uart0 used once
purple_on 000001A0

Symbol: purple_on
   Definitions
      At line 163 in file library4.s
   Uses
      At line 159 in file library4.s
Comment: purple_on used once
read_character 000000A0

Symbol: read_character
   Definitions
      At line 70 in file library4.s
   Uses
      At line 5 in file library4.s
      At line 42 in file library4.s

read_loop 000000AC

Symbol: read_loop
   Definitions
      At line 75 in file library4.s
   Uses
      At line 78 in file library4.s
Comment: read_loop used once
read_string 00000044

Symbol: read_string
   Definitions
      At line 40 in file library4.s
   Uses
      At line 7 in file library4.s
Comment: read_string used once
reverse_bits 000001EC

Symbol: reverse_bits
   Definitions
      At line 191 in file library4.s
   Uses
      At line 12 in file library4.s
Comment: reverse_bits used once
seven_segment 00000230

Symbol: seven_segment
   Definitions
      At line 217 in file library4.s
   Uses
      At line 11 in file library4.s
Comment: seven_segment used once
stoi 00000100

Symbol: stoi
   Definitions
      At line 105 in file library4.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 116 in file library4.s
Comment: stoi used once
string_to_int 000000F0

Symbol: string_to_int
   Definitions
      At line 99 in file library4.s
   Uses
      At line 9 in file library4.s
Comment: string_to_int used once
stringaddress 00000000

Symbol: stringaddress
   Definitions
      At line 17 in file library4.s
   Uses
      None
Comment: stringaddress unused
turn_rgb 000001D0

Symbol: turn_rgb
   Definitions
      At line 181 in file library4.s
   Uses
      At line 150 in file library4.s
      At line 155 in file library4.s
      At line 161 in file library4.s
      At line 167 in file library4.s
      At line 173 in file library4.s
      At line 179 in file library4.s

uart_init 00000130

Symbol: uart_init
   Definitions
      At line 127 in file library4.s
   Uses
      At line 4 in file library4.s
Comment: uart_init used once
white_on 000001C0

Symbol: white_on
   Definitions
      At line 175 in file library4.s
   Uses
      At line 171 in file library4.s
Comment: white_on used once
yellow_on 000001B0

Symbol: yellow_on
   Definitions
      At line 169 in file library4.s
   Uses
      At line 165 in file library4.s
Comment: yellow_on used once
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 16 in file library4.s
   Uses
      At line 183 in file library4.s
Comment: IO0CLR used once
U0LSR 00000014

Symbol: U0LSR
   Definitions
      At line 13 in file library4.s
   Uses
      At line 74 in file library4.s
      At line 88 in file library4.s

U0THR E000C000

Symbol: U0THR
   Definitions
      At line 15 in file library4.s
   Uses
      At line 73 in file library4.s
      At line 87 in file library4.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

lab4 00000000

Symbol: lab4
   Definitions
      At line 2 in file library4.s
   Uses
      At line 177 in file library4.s
      At line 187 in file library4.s
      At line 224 in file library4.s

1 symbol
366 symbols in table
